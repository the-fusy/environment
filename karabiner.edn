{
  :profiles {:Default {:default true :alone 80 :held 50 :delay 0 :sim 1000}}
  :input-sources {:ru {:input_source_id "org.unknown.keylayout.RussionPhoneticProDvorak"}}
  :devices {:vortex [{:vendor_id 1241 :product_id 402}]}
  :froms {
    :ya {:sim [:t :a] :simo {:dorder :strict} :modi {:optional :any}}
    :yu {:sim [:t :f] :simo {:dorder :strict} :modi {:optional :any}}
    :yi {:sim [:t :g] :simo {:dorder :strict} :modi {:optional :any}}
    :ch {:sim [:i :j] :simo {:dorder :strict} :modi {:optional :any}}
    :sh {:sim [:semicolon :j] :simo {:dorder :strict} :modi {:optional :any}}
  }
  :templates {
    :yabai "/opt/homebrew/bin/yabai -m %s"
    :open-app "open -a '%s'"
    :focus-to-right-window "/opt/homebrew/bin/yabai -m window --focus $(/usr/local/bin/yabai -m query --windows | /usr/local/bin/jq '[.[] | {id, focused, x: .frame.x, y: .frame.y}] | sort_by(-.focused, .x) | .[0].x as $fx | .[0].y as $fy | map(select(.x > $fx and .y == $fy)) | .[0].id')"
    :focus-to-left-window "/opt/homebrew/bin/yabai -m window --focus $(/usr/local/bin/yabai -m query --windows | /usr/local/bin/jq '[.[] | {id, focused, x: .frame.x, y: .frame.y}] | sort_by(-.focused, -.x) | .[0].x as $fx | .[0].y as $fy | map(select(.x < $fx and .y == $fy)) | .[0].id')"
  }
  :simlayers {
    :o-mode {:key :s}
    :w-mode {:key :comma}
  }

  :main [
    {
      :des "move and resize windows via yabai"
      :rules [
        :w-mode
        ;; hmm, todo
        [:q [:yabai "window --grid 1:12:0:0:12:0"]]
        [:w [:yabai "window --grid 1:12:0:0:6:0"]]
        [:e [:yabai "window --grid 1:12:1:0:10:0"]]
        [:r [:yabai "window --grid 1:12:6:0:6:0"]]
        [:s [:yabai "window --grid 1:12:0:0:3:0"]]
        [:f [:yabai "window --grid 1:12:9:0:3:0"]]
      ]
    }
    {
      :des "switch between 1/3 windows"
      :rules [
        [:!Q##d [:focus-to-left-window]]
        [:!Q##f [:focus-to-right-window]]
      ]
    }
    {
      :des "change alt and command to mac os defaults"
      :rules [
        [:##left_option :left_command :vortex]
        [:##left_command :left_option :vortex]
        [:##right_option :right_command :vortex]
      ]
    }
    {
      :des "ctrl + backspace to forward delete"
      :rules [
        [:!Tdelete_or_backspace :delete_forward]
      ]
    }
    {
      :des "basic"
      :rules [
        [:escape :f19]
        [:caps_lock :escape]
      ]
    }
    {
      :des "ya -> я, yu -> ю, yi -> й, ch -> ч, sh -> ш"
      ;; todo: change keypad to keyboard emulation via shell
      :other {:parameters {:simultaneous_threshold_milliseconds 1000}}
      :rules [
        [:ya :keypad_6 :ru {:other {:parameters {:to_delayed_action_delay_milliseconds 100 :basic.to_if_alone_timeout_milliseconds 500 :basic.to_if_held_down_threshold_milliseconds 250}} }]
        [:yu :keypad_5 :ru]
        [:yi :keypad_1 :ru]
        [:ch :keypad_2 :ru]
        [:sh :keypad_3 :ru]
      ]
    }
    {
      :des "right_command + hjkl to arrow keys"
      :rules [
        [:!Q##j :left_arrow]
        [:!Q##c :down_arrow]
        [:!Q##v :up_arrow]
        [:!Q##p :right_arrow]
      ]
    }
  ]
}
